name: CI

on: [push, pull_request]

jobs:
  build_for_linux_and_operational_test:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: |
        set -eux
        docker run --rm -v "$(pwd)":/home/rust/src ekidd/rust-musl-builder sh -c 'sudo chown -R rust:rust . && cargo build --release'
        sudo chown -R $USER:$USER .
    - name: Archive
      run: |
        set -eux
        mkdir nbc-x86-64-linux
        cp target/x86_64-unknown-linux-musl/release/nbc nbc-x86-64-linux
        zip -r nbc-x86-64-linux.zip nbc-x86-64-linux
        tar czf nbc-x86-64-linux.tar.gz nbc-x86-64-linux
    - name: Upload Linux executables as artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ github.sha }}-linux-artifacts
        path: nbc-x86-64-linux.*

  build_for_mac:
    runs-on: macOS-10.15
    steps:
    - uses: actions/checkout@v2
    - run: cargo build --release
    - name: Archive
      run: |
        set -eux
        mkdir nbc-x86-64-apple-darwin
        cp target/release/nbc nbc-x86-64-apple-darwin
        zip -r nbc-x86-64-apple-darwin.zip nbc-x86-64-apple-darwin
        tar czf nbc-x86-64-apple-darwin.tar.gz nbc-x86-64-apple-darwin
    - name: Upload macOS executables as artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ github.sha }}-mac-artifacts
        path: nbc-x86-64-apple-darwin.*

  release_if_tag_exits:
    needs: [build_for_linux_and_operational_test, build_for_mac]
    runs-on: ubuntu-18.04
    steps:
    - name: Extract tag name
      shell: bash
      run: echo "##[set-output name=tag;]$(echo ${GITHUB_REF#refs/tags/})"
      id: extract_tag
    - uses: actions/checkout@v2
    - name: Download the artifact (Linux)
      uses: actions/download-artifact@v2
      with:
        name: ${{ github.sha }}-linux-artifacts
    - name: Download the artifact (macOS)
      uses: actions/download-artifact@v2
      with:
        name: ${{ github.sha }}-mac-artifacts
    - name: Release
      if: contains(github.ref, 'refs/tags/')
      run: |
        set -eux
        hub release create \
          -a nbc-x86-64-linux.tar.gz \
          -a nbc-x86-64-linux.zip \
          -a nbc-x86-64-apple-darwin.tar.gz \
          -a nbc-x86-64-apple-darwin.zip \
          -m "Release ${{ steps.extract_tag.outputs.tag }}" ${{ steps.extract_tag.outputs.tag }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
